buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}

plugins {

    id 'java'

    // Code style
    id 'checkstyle'

    id 'jacoco'

    id 'pmd'

    // PITest
    id 'info.solidsoft.pitest' version '1.5.2'
}

group 'sem.commons'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.0.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.11.3'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation('org.assertj:assertj-core:3.23.1')
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion "8.37"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = false
    maxErrors = 0
    maxWarnings = 0
}\

test {
    useJUnitPlatform()
    jacoco {
        enabled = true
        includes = ['sem.commons.*']
        excludes = []
    }

    finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification() {
    dependsOn test
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['sem.commons.*']

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.1
            }
        }
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

pmd {
    incrementalAnalysis = true
    sourceSets = [sourceSets.main]
}

apply plugin: 'info.solidsoft.pitest'
pitest {
    //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
    junit5PluginVersion = '0.12'

    targetClasses = ['sem.commons.*']  //by default "${project.group}.*"
    pitestVersion = '1.5.1' //not needed when a default PIT version should be used
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}